=================================
         Console output          
=================================
OUT: pingpong.p (15, 4): inferred type:  NIL
OUT: pingpong.p (15, 4): inferred type:  TupType(BaseType(REAL), TupType(BaseType(REAL), NIL))
OUT: pingpong.p (15, 18): inferred type:  TupType(BaseType(REAL), TupType(BaseType(REAL), NIL))
OUT: pingpong.p (16, 4): inferred type:  NIL
OUT: pingpong.p (16, 11): inferred type:  BaseType(EVENT)
OUT: pingpong.p (23, 4): inferred type:  NIL
OUT: pingpong.p (23, 12): inferred type:  BaseType(EVENT)
OUT: pingpong.p (24, 4): inferred type:  NIL
OUT: pingpong.p (24, 10): inferred type:  TupType(BaseType(REAL), TupType(BaseType(REAL), NIL))
OUT: pingpong.p (24, 22): inferred type:  BaseType(REAL)
OUT: pingpong.p (24, 22): inferred type:  TupType(BaseType(REAL), TupType(BaseType(EVENT), TupType(BaseType(REAL), NIL)))
OUT: pingpong.p (24, 25): inferred type:  BaseType(EVENT)
OUT: pingpong.p (24, 25): inferred type:  TupType(BaseType(EVENT), TupType(BaseType(REAL), NIL))
OUT: pingpong.p (24, 31): inferred type:  BaseType(REAL)
OUT: pingpong.p (24, 31): inferred type:  TupType(BaseType(REAL), NIL)
OUT: pingpong.p (25, 4): inferred type:  NIL
OUT: pingpong.p (25, 22): inferred type:  BaseType(REAL)
OUT: pingpong.p (25, 22): inferred type:  TupType(BaseType(REAL), TupType(BaseType(EVENT), TupType(BaseType(REAL), NIL)))
OUT: pingpong.p (26, 4): inferred type:  NIL
OUT: pingpong.p (26, 11): inferred type:  BaseType(EVENT)
OUT: pingpong.p (39, 6): inferred type:  NIL
OUT: pingpong.p (50, 10): inferred type:  NIL
OUT: pingpong.p (50, 18): inferred type:  BaseType(EVENT)
OUT: pingpong.p (51, 4): inferred type:  NIL
OUT: pingpong.p (51, 10): inferred type:  BaseType(REAL)
OUT: pingpong.p (51, 10): inferred type:  TupType(BaseType(REAL), TupType(BaseType(EVENT), TupType(BaseType(REAL), NIL)))
OUT: pingpong.p (51, 19): inferred type:  BaseType(EVENT)
OUT: pingpong.p (51, 19): inferred type:  TupType(BaseType(EVENT), TupType(BaseType(REAL), NIL))
OUT: pingpong.p (51, 25): inferred type:  BaseType(REAL)
OUT: pingpong.p (51, 25): inferred type:  TupType(BaseType(REAL), NIL)
OUT: pingpong.p (52, 4): inferred type:  NIL
OUT: pingpong.p (52, 11): inferred type:  BaseType(EVENT)
OUT: pingpong.p (59, 4): inferred type:  NIL
OUT: pingpong.p (59, 10): inferred type:  BaseType(EVENT)
OUT: pingpong.p (76, 9): inferred type:  NIL
OUT: pingpong.p (82, 2): inferred type:  NIL
OUT: pingpong.p (82, 5): inferred type:  BaseType(INT)
OUT: pingpong.p (82, 19): inferred type:  BaseType(BOOL)
OUT: pingpong.p (82, 22): inferred type:  BaseType(INT)
OUT: pingpong.p (84, 3): inferred type:  NIL
OUT: pingpong.p (84, 16): inferred type:  BaseType(REAL)
OUT: pingpong.p (84, 25): inferred type:  BaseType(ANY)
OUT: pingpong.p (84, 31): inferred type:  TupType(BaseType(REAL), TupType(BaseType(REAL), NIL))
OUT: pingpong.p (86, 7): inferred type:  NIL
OUT: pingpong.p (86, 24): inferred type:  BaseType(BOOL)
OUT: pingpong.p (86, 27): inferred type:  BaseType(INT)
OUT: pingpong.p (88, 3): inferred type:  NIL
OUT: pingpong.p (88, 16): inferred type:  BaseType(REAL)
OUT: pingpong.p (92, 3): inferred type:  NIL
OUT: pingpong.p (92, 10): inferred type:  BaseType(BOOL)
OUT: pingpong.p (94, 2): inferred type:  NIL
OUT: pingpong.p (94, 9): inferred type:  BaseType(REAL)
OUT: pingpong.p (105, 4): inferred type:  BaseType(REAL)
OUT: pingpong.p (105, 4): inferred type:  NIL
OUT: pingpong.p (106, 4): inferred type:  BaseType(REAL)
OUT: pingpong.p (106, 4): inferred type:  NIL
OUT: pingpong.p (106, 35): inferred type:  TupType(BaseType(REAL), TupType(BaseType(INT), TupType(BaseType(NULL), TupType(BaseType(NULL), NIL))))
OUT: pingpong.p (106, 46): inferred type:  BaseType(INT)
OUT: pingpong.p (106, 46): inferred type:  TupType(BaseType(INT), TupType(BaseType(NULL), TupType(BaseType(NULL), NIL)))
OUT: pingpong.p (106, 49): inferred type:  BaseType(NULL)
OUT: pingpong.p (106, 49): inferred type:  TupType(BaseType(NULL), TupType(BaseType(NULL), NIL))
OUT: pingpong.p (106, 55): inferred type:  TupType(BaseType(NULL), NIL)
OUT: pingpong.p (107, 4): inferred type:  NIL
OUT: pingpong.p (108, 4): inferred type:  BaseType(REAL)
OUT: pingpong.p (108, 4): inferred type:  NIL
OUT: pingpong.p (109, 4): inferred type:  NIL
OUT: pingpong.p (110, 19): inferred type:  TupType(BaseType(REAL), TupType(BaseType(INT), TupType(TupType(BaseType(REAL), TupType(BaseType(REAL), NIL)), TupType(BaseType(NULL), NIL))))
OUT: pingpong.p (110, 30): inferred type:  BaseType(INT)
OUT: pingpong.p (110, 30): inferred type:  TupType(BaseType(INT), TupType(TupType(BaseType(REAL), TupType(BaseType(REAL), NIL)), TupType(BaseType(NULL), NIL)))
OUT: pingpong.p (110, 34): inferred type:  TupType(BaseType(REAL), TupType(BaseType(REAL), NIL))
OUT: pingpong.p (110, 34): inferred type:  TupType(TupType(BaseType(REAL), TupType(BaseType(REAL), NIL)), TupType(BaseType(NULL), NIL))
OUT: pingpong.p (110, 49): inferred type:  TupType(BaseType(REAL), NIL)
OUT: prtdisthelp.p (3, 3): inferred type:  NIL
OUT: prtdisthelp.p (3, 8): inferred type:  BaseType(REAL)
OUT: prtdisthelp.p (3, 16): inferred type:  BaseType(EVENT)
OUT: prtdisthelp.p (3, 19): inferred type:  BaseType(ANY)
OUT: prtdisthelp.p (8, 2): inferred type:  NIL
OUT: prtdisthelp.p (8, 11): inferred type:  BaseType(REAL)
OUT: prtdisthelp.p (9, 2): inferred type:  NIL
OUT: prtdisthelp.p (9, 9): inferred type:  BaseType(REAL)
OUT: prtdisthelp.p (13, 2): inferred type:  NIL
OUT: Writing stubs.c ...
OUT: Writing program.h ...
OUT: Writing program.c ...
OUT: Writing PingPong.zing ...
OUT: Compiling PingPong.zing to PingPong.dll ...
EXIT: 0
