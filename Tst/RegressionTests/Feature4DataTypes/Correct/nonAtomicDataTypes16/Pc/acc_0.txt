=================================
         Console output          
=================================
OUT: nonatomicdatatypes.p (22, 5): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (22, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (22, 9): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (23, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (23, 14): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (24, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (24, 9): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (25, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (25, 20): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (25, 23): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (27, 5): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (27, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (27, 9): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (28, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (28, 14): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (29, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (29, 15): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (30, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (30, 20): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (30, 23): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (32, 5): inferred type:  BaseType(EVENT)
OUT: nonatomicdatatypes.p (32, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (32, 9): inferred type:  BaseType(EVENT)
OUT: nonatomicdatatypes.p (33, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (33, 14): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (34, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (34, 15): inferred type:  BaseType(EVENT)
OUT: nonatomicdatatypes.p (35, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (35, 20): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (35, 23): inferred type:  BaseType(NULL)
OUT: nonatomicdatatypes.p (37, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (37, 11): inferred type:  BaseType(REAL)
OUT: nonatomicdatatypes.p (38, 11): inferred type:  BaseType(REAL)
OUT: nonatomicdatatypes.p (38, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (38, 17): inferred type:  BaseType(REAL)
OUT: nonatomicdatatypes.p (39, 11): inferred type:  NIL
OUT: nonatomicdatatypes.p (39, 22): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (41, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (42, 5): inferred type:  BaseType(ANY)
OUT: nonatomicdatatypes.p (42, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (42, 9): inferred type:  BaseType(ANY)
OUT: nonatomicdatatypes.p (43, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (43, 11): inferred type:  BaseType(BOOL)
OUT: nonatomicdatatypes.p (43, 22): inferred type:  NIL
OUT: nonatomicdatatypes.p (43, 26): inferred type:  BaseType(INT)
OUT: nonatomicdatatypes.p (43, 29): inferred type:  NIL
OUT: nonatomicdatatypes.p (45, 5): inferred type:  NIL
OUT: nonatomicdatatypes.p (45, 11): inferred type:  BaseType(EVENT)
OUT: Writing stubs.c ...
OUT: Writing program.h ...
OUT: Writing program.c ...
OUT: Writing nonAtomicDataTypes.zing ...
OUT: Compiling nonAtomicDataTypes.zing to nonAtomicDataTypes.dll ...
EXIT: 0
