=================================
         Console output          
=================================
OUT: anytypenullvalue.p (23, 5): inferred type:  BaseType(INT)
OUT: anytypenullvalue.p (23, 5): inferred type:  NIL
OUT: anytypenullvalue.p (23, 9): inferred type:  BaseType(INT)
OUT: anytypenullvalue.p (24, 5): inferred type:  NIL
OUT: anytypenullvalue.p (24, 14): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (25, 5): inferred type:  NIL
OUT: anytypenullvalue.p (25, 9): inferred type:  BaseType(INT)
OUT: anytypenullvalue.p (26, 11): inferred type:  NIL
OUT: anytypenullvalue.p (26, 20): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (26, 23): inferred type:  BaseType(INT)
OUT: anytypenullvalue.p (28, 5): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (28, 5): inferred type:  NIL
OUT: anytypenullvalue.p (28, 9): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (29, 5): inferred type:  NIL
OUT: anytypenullvalue.p (29, 14): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (30, 11): inferred type:  NIL
OUT: anytypenullvalue.p (30, 15): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (31, 11): inferred type:  NIL
OUT: anytypenullvalue.p (31, 20): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (31, 23): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (33, 5): inferred type:  BaseType(EVENT)
OUT: anytypenullvalue.p (33, 5): inferred type:  NIL
OUT: anytypenullvalue.p (33, 9): inferred type:  BaseType(EVENT)
OUT: anytypenullvalue.p (34, 5): inferred type:  NIL
OUT: anytypenullvalue.p (34, 14): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (35, 11): inferred type:  NIL
OUT: anytypenullvalue.p (35, 15): inferred type:  BaseType(EVENT)
OUT: anytypenullvalue.p (36, 11): inferred type:  NIL
OUT: anytypenullvalue.p (36, 20): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (36, 23): inferred type:  BaseType(NULL)
OUT: anytypenullvalue.p (38, 5): inferred type:  NIL
OUT: anytypenullvalue.p (38, 11): inferred type:  BaseType(REAL)
OUT: anytypenullvalue.p (39, 11): inferred type:  BaseType(REAL)
OUT: anytypenullvalue.p (39, 11): inferred type:  NIL
OUT: anytypenullvalue.p (39, 17): inferred type:  BaseType(REAL)
OUT: anytypenullvalue.p (40, 11): inferred type:  NIL
OUT: anytypenullvalue.p (40, 22): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (42, 5): inferred type:  NIL
OUT: anytypenullvalue.p (43, 5): inferred type:  BaseType(ANY)
OUT: anytypenullvalue.p (43, 5): inferred type:  NIL
OUT: anytypenullvalue.p (43, 9): inferred type:  BaseType(ANY)
OUT: anytypenullvalue.p (44, 5): inferred type:  NIL
OUT: anytypenullvalue.p (45, 5): inferred type:  NIL
OUT: anytypenullvalue.p (45, 11): inferred type:  BaseType(BOOL)
OUT: anytypenullvalue.p (45, 22): inferred type:  NIL
OUT: anytypenullvalue.p (45, 26): inferred type:  BaseType(INT)
OUT: anytypenullvalue.p (45, 29): inferred type:  NIL
OUT: anytypenullvalue.p (47, 5): inferred type:  NIL
OUT: anytypenullvalue.p (47, 11): inferred type:  BaseType(EVENT)
OUT: Writing stubs.c ...
OUT: Writing program.h ...
OUT: Writing program.c ...
OUT: Writing anyTypeNullValue.zing ...
OUT: Compiling anyTypeNullValue.zing to anyTypeNullValue.dll ...
EXIT: 0
