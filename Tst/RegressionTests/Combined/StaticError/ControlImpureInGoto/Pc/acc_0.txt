=================================
         Console output          
=================================
OUT: controlimpureerrorsgoto.p (16, 4): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (16, 10): inferred type:  BaseType(EVENT)
OUT: controlimpureerrorsgoto.p (18, 16): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (18, 21): inferred type:  BaseType(REAL)
OUT: controlimpureerrorsgoto.p (18, 27): inferred type:  BaseType(EVENT)
OUT: controlimpureerrorsgoto.p (19, 16): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (19, 27): inferred type:  BaseType(EVENT)
OUT: controlimpureerrorsgoto.p (20, 16): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (20, 27): inferred type:  BaseType(EVENT)
OUT: controlimpureerrorsgoto.p (21, 7): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (21, 18): inferred type:  BaseType(EVENT)
OUT: controlimpureerrorsgoto.p (23, 28): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (24, 36): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (24, 42): inferred type:  BaseType(EVENT)
OUT: controlimpureerrorsgoto.p (25, 30): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (27, 4): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (27, 10): inferred type:  BaseType(BOOL)
OUT: controlimpureerrorsgoto.p (27, 13): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (28, 9): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (32, 6): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (32, 6): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (32, 12): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (32, 14): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (32, 24): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (33, 8): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (33, 18): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (34, 8): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (34, 18): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (35, 8): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (40, 9): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (47, 9): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (50, 9): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (53, 9): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (56, 9): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (59, 3): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (61, 16): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (65, 3): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (65, 9): inferred type:  BaseType(EVENT)
OUT: controlimpureerrorsgoto.p (68, 3): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (69, 3): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (69, 10): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (73, 3): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (73, 10): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (76, 3): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (76, 9): inferred type:  BaseType(EVENT)
OUT: controlimpureerrorsgoto.p (77, 3): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (77, 10): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (80, 3): inferred type:  NIL
OUT: controlimpureerrorsgoto.p (80, 10): inferred type:  BaseType(INT)
OUT: controlimpureerrorsgoto.p (24, 36): function may cause a change in current state; this is not allowed here
OUT: controlimpureerrorsgoto.p (25, 30): function may cause a change in current state; this is not allowed here
OUT: controlimpureerrorsgoto.p (27, 4): function may cause a change in current state; this is not allowed here
OUT: controlimpureerrorsgoto.p (32, 14): this function must be pure. Impure functions can only be called like "foo(...);" or "x = foo(...);"
OUT: controlimpureerrorsgoto.p (35, 8): this function must be pure. Impure functions can only be called like "foo(...);" or "x = foo(...);"
OUT: controlimpureerrorsgoto.p (43, 31): function may cause a change in current state; this is not allowed here
OUT: controlimpureerrorsgoto.p (44, 28): function may cause a change in current state; this is not allowed here
OUT: Compilation failed
EXIT: -1
