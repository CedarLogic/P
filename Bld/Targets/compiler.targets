<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <UnifiedPlatform>$(Platform)</UnifiedPlatform>
    <!-- C++ projects use "Win32" for "x86" platform and .NET projects use 'x86' -->
    <!-- So this new property unifies that difference and moves everything to 'x86' -->
    <UnifiedPlatform Condition="'$(Platform)'=='Win32'">x86</UnifiedPlatform>
    <!-- This is so that the C++ project will do incremental build of .p files correctly -->
    <DisableFastUpToDateCheck >True</DisableFastUpToDateCheck>
  </PropertyGroup>

  <PropertyGroup>
    <!--Make sure that the lexer runs before the C# compiler-->
    <CoreCompileDependsOn>$(CoreCompileDependsOn);KillCompilerService</CoreCompileDependsOn>
  </PropertyGroup>

  <UsingTask
    TaskName="KillProcess"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <ProcessName ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.Diagnostics"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[        
            foreach (Process p in Process.GetProcesses())
            {
                if (p.ProcessName == ProcessName) {
                  Log.LogMessage("Killing process: " + p.ProcessName, MessageImportance.High);
                  p.Kill();
                }
            }
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="KillCompilerService">
    <KillProcess ProcessName="PCompilerService"/>
  </Target>
  
</Project>
